---
- hosts: local
    vars:
        restya_user: restya
        restya_pass: hjVl2!rGd22    
        restya_db: restyaboard
        restya_github: https://github.com/RestyaPlatform/board.git
        restya_apps_github: https://github.com/RestyaPlatform/board-apps.git
        restya_install_dir: /usr/share/nginx/html/restyaboard
        download_dir: /opt/restyaboard
        download_apps_dir: "{{ download_dir }}/client/apps"            
        postgres_host: localhost
        postgres_port: 5432
        postgres_user: postgres
        postgres_pass:  
        postgres_conf: /etc/postgresql/9.5/main/pg_hba.conf
        nginx_domain: my.exampledomain.com
        smtp_user:
        smtp_pass:
        smtp_host:
        smtp_port:
        timezone: America/Los_Angeles    
    tasks:
        - name: install packages
            package:
              name: "{{ item }}"
              state: present
            with_items:
              - postgresql
              - unzip
              - nginx-full
              - jq
              - python-software-properties
              - libjpeg8
              - php
              - postfix
              - php7.0-fpm
              - php7.0-cli
              - libpq5
              - php7.0-pgsql
              - php7.0-mbstring
              - php7.0-ldap
              - gcc
              - imagemagick
              - php7.0-imap
              - php7.0-xml
              - wget
              - ca-certificates
              - php7.0-geoip
              - php7.0-dev
              - libgeoip-dev
              - geoip-bin
              - autotools-dev
              - automake
              - erlang
              - libyaml-dev
              - rebar
              - curl
              - debian-keyring 
              - debian-archive-keyring
              - libnl-3-200
              - libnl-3-dev
              - libnl-genl-3-200
              - libnl-genl-3-dev
              - python-pip
              - expat
            become: true
        - name: create db    
            postgresql_user:
              name: "{{ restya_user }}"
              password: "{{ restya_pass }}"
              login_host: "{{ postgres_host }}"
              login_user: "{{ postgres_user }}"
              login_password: "{{ postgres_pass }}"
              port: "{{ postgres_port }}"
              state: present
            postgresql_db:
              name: "{{ restya_db }}"
              state: present
              owner: "{{ restya_user}}"
        - name: Grab git projects  
            git:
              repo: "{{ restya_github }}"
              dest: "{{ download_dir }}"
            git:
              repo: "{{ restya_apps_github }}"
              dest: "{{ download_apps_dir }}"
        - name: setup config files
            lineinfile:
              path: /etc/php/7.0/fpm/php.ini
              regexp: ";date.timezone"
              line: "date.timezone = {{ timezone }}"
              backup: yes
              create: yes  
            lineinfile:
              path: "{{ postgres_conf }}"
              regexp: "(peer|ident)"
              line: "trust"
              backup: yes
              create: yes
            lineinfile:
              path: /etc/php.ini
              regexp: "extension=geoip.so"
              line: "extension=geoip.so"
              backup: yes
              create: yes    
            file:
              path: /usr/share/GeoIP
              state: directory
            become: true
        - name: get geo data
            command: get_geoip_data
        - name: setup nginx 
            lineinfile:
                path: /etc/nginx/conf.d/restyaboard.conf
                regexp: "server_name.*$"
                line: "server_name {{ nginx_domain }} ;"
                backup: yes
                create: yes
            lineinfile:
                path: /etc/nginx/conf.d/restyaboard.conf
                regexp: "root.*html"
                line: "root {{ restya_install_dir }}"  
            copy:
                src: "{{ download_dir }}/"
                dest: "{{ restya_install_dir }}"
                directory_mode: yes
            become: true
        - name: Setup Postfix
            shell: echo "postfix postfix/mailname string {{ nginx_domain }}" | debconf-set-selections && echo "postfix postfix/main_mailer_type string 'Internet Site'" | debconf-set-selections
            become: true
        - name: Setup File Perms
            file:
                path: "{{ restya_install_dir }}/media"
                mode: "g=ow"
                state: directory
            file:
                path: "{{ restya_install_dir }}/client/img"
                mode: "g=ow"
                state: directory
            file:
                path: "{{ restya_install_dir }}/tmp/cache"
                mode: "g=ow"
                state: directory
            file:
                path: "{{ restya_install_dir }}/server/php/*.sh"
                mode: 0755
                state: file
            become: true
        - name: create restya db
            postgresql_ext:
                db: "{{ restya_db }}"
                login_host: "{{ postgres_host }}"
                login_user: "{{ postgres_user }}"
                login_pass: "{{ postgres_pass }}"
                port: "{{ postgres_port }}"
                name: plpgsql
        - name: Import Postgres db
            command: psql -d {{ restya_db }} -f "{{ restya_db }}/sql/restyaboard_with_empty_data.sql" -U {{ postgres_user }}"
        - name: Setup PHP  
            lineinfile:
                path: "{{ restya_install_dir }}/server/php/config.inc.php
                regexp: "^.*'R_DB_NAME'.*$"
                line: "define('R_DB_NAME', '{{ restya_db }}');"
                backup: yes
                create: yes
            lineinfile:
                path: "{{ restya_install_dir }}/server/php/config.inc.php
                regexp: "^.*'R_DB_USER'.*$"
                line: "define('R_DB_USER', '{{ postgres_user }}');"
            lineinfile:
                path: "{{ restya_install_dir }}/server/php/config.inc.php
                regexp: "^.*'R_DB_PASSWORD'.*$"
                line: "define('R_DB_PASSWORD', '{{ postgres_pass }}');"
            lineinfile:
                path: "{{ restya_install_dir }}/server/php/config.inc.php
                regexp: "^.*'R_DB_HOST'.*$"
                line: "define('R_DB_HOST', '{{ postgres_host }}');"
            lineinfile:
                path: "{{ restya_install_dir }}/server/php/config.inc.php
                regexp: "^.*'R_DB_PORT'.*$"
                line: "define('R_DB_PORT', '{{ postgres_port }}');"  
            cron:
                backup: yes
                minute: "*/5"
                job: "{{ restya_install_dir }}/server/php/shell/instant_email_notification.sh"
            cron:
                backup: yes
                hour: "*/1"
                job: "{{ restya_install_dir }}/server/php/shell/periodic_email_notification.sh"  
            cron:
                minute: "*/30"
                job: "{{ restya_install_dir }}/server/php/shell/imap.sh"
            cron:
                minute: "*/5"
                job: "{{ restya_install_dir }}/server/php/shell/webhook.sh"
            cron:
                minute: "*/5"
                job: "{{ restya_install_dir }}/server/php/shell/card_due_notification.sh"
            lineinfile:
                path: /etc/php.ini
                regexp: "1021 i auth_username = {{ smtp_user }}"    
            lineinfile:
                path: /etc/php.ini
                regexp: "1022 i auth_password = {{ smtp_pass }}"
            lineinfile:
                path: /etc/php.ini
                regexp: "SMTP = .*$"
                line: "SMTP = {{ smtp_host }}"
            lineinfile:
                path: /etc/php.ini
                regexp: "smtp_port = .*$"
                line: "smtp_port = {{ smtp_port }}"
        - name: Restart services
            service:
                name: postgresql
                state: restarted
            service:
                name: cron
                state: restarted
            service:
                name: php7.0-fpm
                state: restarted
            service:
                name: nginx
                state: restarted
            service:
                name: postfix
                state: restarted
