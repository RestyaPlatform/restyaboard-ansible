---
- name: Install NGINX Packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "nginx"
- name: Copy our nginx.conf over
  copy:
    src: "defaults/nginx.conf"
    dest: "/etc/nginx/nginx.conf"
    force: yes
  become: true
- name: Copy restya nginx config to nginx
  copy:
    src: "defaults/restyaboard.conf"
    dest: "{{ webserver_conf }}"
    owner: www-data
    group: www-data
    mode: 0555
  become: true  
- name: enable nginx site
  file:
    src: "{{ webserver_conf }}"
    dest: /etc/nginx/sites-enabled/restyaboard
    state: link
  become: true
- name: setup nginx config
  replace:
    path: "{{ webserver_conf }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}" 
    backup: yes
  with_items:
    - { regexp: ".*root.*", line: "root  {{ restya_install_dir }}/client;" }  
    - { regexp: ".*server_name .*" , line: "server_name   {{ domain }} ;" }
    - { regexp: ".*listen .*" , line: "listen    {{ web_port }} ssl;" }
    - { regexp: ".*ssl_certificate .*" , line: "ssl_certificate   /etc/nginx/ssl/{{ domain }}.crt ;" }
    - { regexp: ".*ssl_certificate_key .*" , line: "ssl_certificate_key   /etc/nginx/ssl/{{ domain }}.key;" }
  become: true
- name: setup nginx config
  lineinfile:
    path: "{{ webserver_conf }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}" 
  with_items:
    - { regexp: ".*danger.*", line: "root  {{ restya_install_dir }}/;" }  
  become: true
- name: Create NGINX SSL Directory
  file:
    path: /etc/nginx/ssl
    state: directory
    mode: 0755
  become: true
- name: Enable Let's Encrypt
  letsencrypt:
    account_key: "/etc/pki/cert/private/account.key"
    csr: "/etc/pki/cert/csr/{{ domain }}.csr"
    dest: "/etc/nginx/ssl/{{ domain }}.crt"
  when: letsencrypt_challenge_name != "sample_com_challenge"
  become: true
  register: "{{ letsencrypt_challenge_name }}"
- name: Prepare SSL Request File
  when: letsencrypt_challenge_name == "sample_com_challenge"
  lineinfile:
    path: "{{ playbook_dir}}/defaults/ssl-request.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "C =" , line: "C = {{ cert_country }}" }
    - { regexp: "ST =", line: "ST = {{ cert_state }}" }
    - { regexp: "L =", line: "L = {{ cert_city }}" }
    - { regexp: "O =", line: "O = {{ company }}" }
    - { regexp: "emailAddress", line: " emailAddress = {{ admin_email }}" }
  become: true        
- name: Create Self Signed Certificates
  command: "openssl req  -config {{ playbook_dir}}/defaults/ssl-request.conf -sha512 -x509 -nodes -days 365 -newkey rsa:4096 -keyout /etc/nginx/ssl/{{ domain }}.key -out /etc/nginx/ssl/{{ domain }}.crt"
  become: true
  when: letsencrypt_challenge_name == "sample_com_challenge"
- name: Ensure certs are in unix format
  command: "{{ item }}"
  become: true
  with_items:
    - "dos2unix /etc/nginx/ssl/{{ domain }}.crt"
    - "dos2unix /etc/nginx/ssl/{{ domain }}.key"
- name: ensure permissions for nginx
  file:
    path: "{{ item }}"
    mode: 0500
    owner: www-data
    group: www-data
    state: file
  with_items:
    - /etc/nginx/ssl/{{ domain }}.crt
    - /etc/nginx/ssl/{{ domain }}.key
    - /etc/nginx/nginx.conf
  become: true
- name: Restart services
  command: "service {{ item }} restart" # due to a bug with ansible and systemd, using this
  become: true
  with_items:
    - "nginx"


