---
- hosts: all
  vars:
    restya_user: "restya"
    restya_pass: "hjVl2rGd22"  
    restya_db: "restyaboard"
    restya_github: "https://github.com/RestyaPlatform/board.git"
    restya_apps_github: "https://github.com/RestyaPlatform/board-apps.git"
    restya_install_dir: "/usr/share/nginx/html/restyaboard"
    download_dir: "/opt/restyaboard"
    download_apps_dir: "{{ download_dir }}/client/apps"      
    postgres_host: "localhost"
    postgres_port: [] # 5432
    postgres_user: "postgres"
    postgres_pass: [] 
    postgres_conf: "/etc/postgresql/9.5/main/pg_hba.conf" # This varies host to host and postgres version to version...
    domain: "{{ ansible_fqdn }}"
    smtp_user: []
    smtp_pass: []
    smtp_host: []
    smtp_port: []
    timezone: "America/Los_Angeles"
    admin_email: []
    letsencrypt_challenge_name: "sample_com_challenge"
    cert_country: "US"
    company: "Shadey Security Wannabe"
    cert_city: "Seattle"
    cert_state: "Washington"
    web_port: 443
    provider: "nginx" # apache2 works
    stage: "stable" #dev or latest works too
  tasks:    
    - name: Install standard packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql
        - apparmor
        - unzip
        - jq
        - python-software-properties
        - libjpeg8
        - php
        - postfix
        - php7.0-fpm
        - php7.0-cli
        - libpq5
        - php7.0-pgsql
        - php7.0-mbstring
        - php7.0-ldap
        - gcc
        - dos2unix
        - imagemagick
        - php7.0-imap
        - php7.0-xml
        - wget
        - ca-certificates
        - php-geoip
        - php7.0-dev
        - libgeoip-dev
        - geoip-bin
        - autotools-dev
        - automake
        - erlang
        - libyaml-dev
        - rebar
        - curl
        - debian-keyring 
        - debian-archive-keyring
        - libnl-3-200
        - libnl-3-dev
        - libnl-genl-3-200
        - libnl-genl-3-dev
        - expat
        - python-pip 
        - python-dev 
        - libssl-dev 
        - build-essential 
        - libtool 
        - autoconf
        - fail2ban
      become: true
    - name: Install NGINX Packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - nginx_full
      when: provder == "nginx"  
    - name: Install Apache Packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - apache2 # I might have to change this to look for apache2 on debian and httpd on rhel variants
        - libapache2-mod-security2
        - libapache2-mod-evasive 
        - libapache2-mod-apparmor 
        - libapache2-mod-ruwsgi
      when: provider == "apache2"
      become: true
    - name: Enable Apache2 Modules
      apache2_module:
        name: "{{ item }}"
      with_items:
        - security2
        - evasive
        - rewrite
        - ruwsgi 
        - apparmor
      when: provider == "apache2"
      become: true
    - name: Install Pip packages
      pip:
        name: "{{ item }}"
        state: latest
      with_items:
        - ansible
        - pip
        - psycopg2
        - pyOpenSSL
        - pexpect
      become: true
    - name: Grab git projects 
      git:
        repo: "{{ restya_github }}"
        dest: "{{ download_dir }}"
      become: true
      when: stage == "dev"
    - name: Grab restya git apps
      git:
        repo: "{{ restya_apps_github }}"
        dest: "{{ download_apps_dir }}"
      become: true
      when: stage == "dev"
    - name: Grab Latest Release
      get_url:
        "url: https://github.com/RestyaPlatform/board/releases/download/v0.4.2/board-v0.4.2.zip"
        dest: "{{ download_dir }}"
        validate_certs: no
      become: true
      when: stage == ("stable" or stage == "latest")
    - name: Unzip Latest Release
      unarchive:
        src: "{{ download_dir }}/board-v0.4.2.zip"
        dest: "{{ download_dir }]"
      become: true
      when: stage == ("stable" or stage == "latest")
        
